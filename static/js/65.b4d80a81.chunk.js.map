{"version":3,"file":"static/js/65.b4d80a81.chunk.js","mappings":"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","sources":["components/MainContent/Screens/Pinyin.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { on, off } from \"./../../../customEvent\";\r\n\r\nimport pinyin from \"pinyin\";\r\nimport Tippy from \"@tippyjs/react/headless\";\r\nimport HanziComponent from \"./../../HanziComponent\";\r\nimport FormData from \"../FormData\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faCopy, faVolumeHigh } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styles from \"./../main.module.scss\";\r\n\r\nconst CopyPinyinFn = function (pinyins) {\r\n\tnavigator.clipboard.writeText(pinyins).then(\r\n\t\ttoast.success(\"to clipboard\", {\r\n\t\t\tposition: toast.POSITION.BOTTOM_CENTER,\r\n\t\t}),\r\n\t\t(err) => {\r\n\t\t\ttoast.error(\"Could not copy text: \" + err, {\r\n\t\t\t\tposition: toast.POSITION.BOTTOM_CENTER,\r\n\t\t\t});\r\n\t\t}\r\n\t);\r\n};\r\nfunction PinyinScreen(props, ref) {\r\n\tconst Hanzi_wiew = useRef();\r\n\tconst [value, setValue] = useState(\"\");\r\n\tconst setPinyin = ({ detail: _value }) => {\r\n\t\tsetValue(_value);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\ton(\"toPinyin\", setPinyin);\r\n\r\n\t\treturn () => {\r\n\t\t\toff(\"toPinyin\", setPinyin);\r\n\t\t};\r\n\t});\r\n\treturn (\r\n\t\t<div className={styles[\"view_pinyin_warapper\"]}>\r\n\t\t\t<div className={styles[\"hanzi_\"]}>\r\n\t\t\t\t<FormData type={\"PinyinScreen\"} ttsp={\"text-wrapper-id\"} />\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={styles[\"text-wrapper\"]}\r\n\t\t\t\t\tid='text-wrapper-id'\r\n\t\t\t\t\tref={Hanzi_wiew}\r\n\t\t\t\t>\r\n\t\t\t\t\t{value &&\r\n\t\t\t\t\t\t[...value]\r\n\t\t\t\t\t\t\t.join(\" \")\r\n\t\t\t\t\t\t\t.split(/\\s+/)\r\n\t\t\t\t\t\t\t.map((char, i) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles[\"char_wrapper\"]}\r\n\t\t\t\t\t\t\t\t\t\tdata-character={char}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span className={styles[\"char_pinyin\"]}>\r\n\t\t\t\t\t\t\t\t\t\t\t{pinyin(char)[0]}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<Tippy\r\n\t\t\t\t\t\t\t\t\t\t\tinteractive\r\n\t\t\t\t\t\t\t\t\t\t\thideOnClick={true}\r\n\t\t\t\t\t\t\t\t\t\t\tplacement='bottom-start'\r\n\t\t\t\t\t\t\t\t\t\t\trender={(attrs) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='tippy-wrapper'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttabIndex='-1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...attrs}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<HanziComponent\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcharacter={char}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.hanziComponentOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"char_hanzi\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{char}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</Tippy>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles[\"btns\"]}>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tCopyPinyinFn(pinyin(value, { group: true }));\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttitle='pinyin copy'\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCopy} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={styles[\"speaker-btn\"]}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconst utterThis = new SpeechSynthesisUtterance(value);\r\n\t\t\t\t\t\tutterThis.lang = \"zh-CN\";\r\n\t\t\t\t\t\tutterThis.volume = 1;\r\n\t\t\t\t\t\tspeechSynthesis.speak(utterThis);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttitle='text to speech'\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faVolumeHigh} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<label\r\n\t\t\t\t\tclassName={styles[\"slide-input\"]}\r\n\t\t\t\t\tstyle={{ marginLeft: \"auto\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tHanzi_wiew.current.style.setProperty(\r\n\t\t\t\t\t\t\t\t\"--hanzi_size\",\r\n\t\t\t\t\t\t\t\t`${e.target.value}rem`\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttype='range'\r\n\t\t\t\t\t\tdefaultValue={2.5}\r\n\t\t\t\t\t\tstep={0.5}\r\n\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\tmax={5}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default PinyinScreen;\r\n"],"names":["props","ref","Hanzi_wiew","useRef","_useState","useState","_useState2","_slicedToArray","value","setValue","setPinyin","_ref","_value","detail","useEffect","on","off","_jsxs","className","styles","children","_jsx","FormData","type","ttsp","id","_toConsumableArray","join","split","map","char","i","pinyin","Tippy","interactive","hideOnClick","placement","render","attrs","_objectSpread","tabIndex","HanziComponent","character","options","hanziComponentOptions","onClick","pinyins","group","navigator","clipboard","writeText","then","toast","position","err","title","FontAwesomeIcon","icon","faCopy","utterThis","SpeechSynthesisUtterance","lang","volume","speechSynthesis","speak","faVolumeHigh","style","marginLeft","onChange","e","current","setProperty","concat","target","defaultValue","step","min","max"],"sourceRoot":""}